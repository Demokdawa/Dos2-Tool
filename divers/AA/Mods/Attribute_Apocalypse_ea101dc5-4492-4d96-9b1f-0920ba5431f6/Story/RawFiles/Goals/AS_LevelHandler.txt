Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Current max player level
//DB_AS_MaxPlayerLevel(0);

KBSECTION
IF
GameStarted(_Any,_)
THEN
TimerLaunch("AS_SoakLevels",1000);

IF
TimerFinished("AS_SoakLevels")
THEN
IterateParties("AS_SoakLevel");

IF
StoryEvent((CHARACTERGUID)_Char,"AS_SoakLevel")
AND
CharacterGetLevel(_Char,_Level)
THEN
DB_AS_StartingLevel(_Char,_Level);

IF
StoryEvent((CHARACTERGUID)_Char,"AS_WillNeverHappen")
AND
DB_AS_StartingLevel(_Char,_Level)
THEN
CharacterStatusText(_Char,"Please screenshot this, send it to Kalavinka and tell him how you triggered it. Actually no, don't do that, because you clearly did it on purpose.");





// Joyless Beginnings is a magic garden. We'll need to do some trickery to detect it and remove the extra ability points it grants for no reason.
IF
RegionStarted(_Any)
AND
IsCharacterCreationLevel(_Any,0)
AND
GlobalGetFlag("AS_TestedForJoyless",0)
THEN
TimerLaunch("AS_TestForJoyless",250);
GlobalSetFlag("AS_TestedForJoyless");

IF
TimerFinished("AS_TestForJoyless")
AND
GlobalGetFlag("JB_MaladyPorted",1)
THEN
IterateParties("AS_AwardBackupAbilityPointForJB");
IterateParties("AS_RemoveJBAbilityPoints");

IF
StoryEvent((CHARACTERGUID)_Char,"AS_AwardBackupAbilityPointForJB")
THEN
SetStoryEvent(_Char,"AS_AbilityPointStore");

IF
StoryEvent((CHARACTERGUID)_Char,"AS_AbilityPointStore")
AND
CharacterIsDead(_Char,0)
THEN
CharacterAddAbilityPoint(_Char,1);

IF
StoryEvent((CHARACTERGUID)_Char,"AS_AbilityPointStore")
AND
CharacterIsDead(_Char,1)
AND
GetVarInteger(_Char,"AS_AbilityPointsToGet",_Val)
AND
IntegerSum(_Val,1,_Sum)
THEN
SetVarInteger(_Char,"AS_AbilityPointsToGet",_Sum);

IF
StoryEvent((CHARACTERGUID)_Char,"AS_AbilityPointStore")
AND
CharacterIsDead(_Char,1)
AND NOT
GetVarInteger(_Char,"AS_AbilityPointsToGet",_)
THEN
SetVarInteger(_Char,"AS_AbilityPointsToGet",1);

IF
CharacterResurrected(_Char)
AND
GetVarInteger(_Char,"AS_AbilityPointsToGet",_Val)
THEN
CharacterAddAbilityPoint(_Char,_Val);
SetVarInteger(_Char,"AS_AbilityPointsToGet",0);



/*
IF
StoryEvent((CHARACTERGUID)_Char,"AS_RemoveJBAbilityPoints")
AND
CharacterIsPlayer(_Char,1)
THEN
CharacterAddAbilityPoint(_Char,-4);
*/


// Ability point per source event

PROC
ProcRemoveSourceCollar(_Char)
AND
CharacterIsPlayer(_Char,1)
AND
DB_CurrentLevel(_Level)
AND
IsCharacterCreationLevel(_Level,0)
AND
CharacterGetLevel(_Char,_Lvl)
AND
ObjectGetFlag(_Char,"AS_GotAbilityPointFromCollar",0)
AND
_Lvl > 1
THEN
SetStoryEvent(_Char,"AS_AbilityPointStore");
ObjectSetFlag(_Char,"AS_GotAbilityPointFromCollar");

IF
ObjectFlagSet("GLO_Has2MaxMP",(CHARACTERGUID)_Char,_)
THEN
SetStoryEvent(_Char,"AS_AbilityPointStore");

IF
ObjectFlagSet("GLO_Has3MaxMP",(CHARACTERGUID)_Char,_)
THEN
SetStoryEvent(_Char,"AS_AbilityPointStore");


// If the character has no value for total abilities gotten through the progression system, set it to an appropriate one for their level.
IF
StoryEvent((CHARACTERGUID)_Char,"AS_ResetAttributes")
AND NOT
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
THEN
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Final);






// Give the character X ability points, where X is the total of every odd level past 1, minus the points they already got.
// If alive
IF
CharacterLeveledUp(_Char)
AND
CharacterIsDead(_Char,0)
AND
CharacterIsPlayer(_Char,1)	// This is mostly for testing purposes, so leveling up a non-recruited companion doesn't trigger this event
AND
CharacterGetLevel(_Char,_Lvl)
AND
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Val)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
AND
IntegerSubtract(_Final,_Val,_Out2)
// Now let's increase totalabilitiesgotten by the amount
AND
IntegerSum(_Val,_Out2,_Sum)
THEN
CharacterAddAbilityPoint(_Char,_Out2);
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Sum);
//CharacterStatusText(_Char,"Did event 1 - where we know the points");

// If dead
IF
CharacterLeveledUp(_Char)
AND
CharacterIsDead(_Char,1)
AND
CharacterIsPlayer(_Char,1)	// This is mostly for testing purposes, so leveling up a non-recruited companion doesn't trigger this event
AND
CharacterGetLevel(_Char,_Lvl)
AND
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Val)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
AND
IntegerSubtract(_Final,_Val,_Out2)
// Now let's increase totalabilitiesgotten by the amount
AND
IntegerSum(_Val,_Out2,_Sum)
THEN
SetVarInteger(_Char,"AS_AbilityPointsToGet",_Out2);
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Sum);

// But if we can't see how many ability points someone got, let's assume it was 0 - and give them all appropriate ability points for their level
IF
CharacterLeveledUp(_Char)
AND
DB_CurrentLevel(_Level)
AND
IsCharacterCreationLevel(_Level,0)
AND
CharacterIsPlayer(_Char,1)	// This is mostly for testing purposes, so leveling up a non-recruited companion doesn't trigger this event
AND
CharacterGetLevel(_Char,_Lvl)
AND NOT
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
THEN
CharacterAddAbilityPoint(_Char,_Final);
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Final);
//CharacterStatusText(_Char,"Did event 2 - NO POINTS KNOWN");

// For NPCs and Companions
// Points known
IF
CharacterJoinedParty(_Char)
AND
DB_CurrentLevel(_Level)
AND
IsCharacterCreationLevel(_Level,0)
AND
IsTagged(_Char,"AVATAR",0)
AND
CharacterGetLevel(_Char,_Lvl)
AND
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Val)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
AND
IntegerSubtract(_Final,_Val,_Out2)
// Now let's increase totalabilitiesgotten by the amount
AND
IntegerSum(_Val,_Out2,_Sum)
THEN
CharacterAddAbilityPoint(_Char,_Out2);
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Sum);
//CharacterStatusText(_Char,"Did event 1 - where we know the points");


// Points unknown
IF
CharacterJoinedParty(_Char)
AND
DB_CurrentLevel(_Level)
AND
IsCharacterCreationLevel(_Level,0)
AND
IsTagged(_Char,"AVATAR",0)
AND
CharacterGetLevel(_Char,_Lvl)
AND
_Lvl > 1
AND NOT
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_)
AND
HasActiveStatus(_Char,"SOURCE_MUTED",0) // If not source muted, collar removed. Therefore...
THEN
CharacterAddAbilityPoint(_Char,1);  // Add the extra AbP for source collar removal
SetStoryEvent(_Char,"AS_ScriptEvent_CheckMaxSource");

// This is for if they're recruited after having max 2 and max 3 SP.
IF
StoryEvent((CHARACTERGUID)_Char,"AS_ScriptEvent_CheckMaxSource")
AND
ObjectGetFlag(_Char,"GLO_Has2MaxMP",_Val1)
AND
ObjectGetFlag(_Char,"GLO_Has3MaxMP",_Val2)
AND
IntegerSum(_Val1,_Val2,_NewAp)
THEN
CharacterAddAbilityPoint(_Char,_NewAp);

IF
CharacterJoinedParty(_Char)
AND
DB_CurrentLevel(_Level)
AND
IsCharacterCreationLevel(_Level,0)
AND
CharacterGetLevel(_Char,_Levels)
AND
_Levels > 1
AND
IsTagged(_Char,"AVATAR",0)
AND
CharacterGetLevel(_Char,_Lvl)
AND NOT
GetVarInteger(_Char,"AS_TotalAbilitiesGotten",_)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
THEN
CharacterAddAbilityPoint(_Char,_Final);
SetVarInteger(_Char,"AS_TotalAbilitiesGotten",_Final);





/*
IF
CharacterJoinedParty(_Comp)
AND
ObjectGetFlag(_Comp,"AS_CantBenefitFromLevelAbil",0)
AND
ObjectGetFlag(_Comp,"AS_DidLevelSetup",0)
AND
CharacterGetLevel(_Comp,_Lvl)
AND
IntegerDivide(_Lvl,2,_Out)
AND
IntegerModulo(_Lvl,2,_Mod)
AND
IntegerSum(_Out,_Mod,_Lev)
AND
IntegerSubtract(_Lev,1,_Final)
AND
IntegerSubtract(_Final,_Mod,_Out2)
THEN
CharacterAddAbilityPoint(_Comp,_Out2);
ObjectSetFlag(_Comp,"AS_DidLevelSetup",1);

IF
CharacterLeftParty(_Char)
THEN
ObjectSetFlag(_Char,"AS_DidLevelSetup");
*/

// Level up all Grenades in a character's inventory

IF
CharacterLeveledUp(_Char)
THEN
InventoryLaunchTagIterator(_Char,"GRENADES","","AS_LVLGRENADES","");

IF
StoryEvent((ITEMGUID)_Item,"AS_LVLGRENADES")
AND
ItemGetOwner(_Item,_Char)
AND
CharacterGetLevel(_Char,_Lvl)
AND
IsTagged(_Item,"GRENADES",1)
THEN
ItemLevelUpTo(_Item,_Lvl);

/*
IF
DB_Sees(_Char,_Npc)
AND
CharacterIsPlayer(_Npc,0)
AND
DB_AS_MaxPlayerLevel(_Val)
THEN
InventoryLaunchIterator(_Npc,"AS_LevelUpItemsToMax","");

IF
StoryEvent((ITEMGUID)_Item,"AS_LevelUpItemsToMax")
AND
ItemGetOwner(_Item,_Char)
AND
CharacterGetEquippedWeapon(_Char,(ITEMGUID)_Weapon)
AND
_Weapon != _Item
AND
CharacterGetEquippedShield(_Char,(ITEMGUID)_Shield)
AND
_Shield != _Item
AND
DB_AS_MaxPlayerLevel(_Val)
THEN
ItemLevelUpTo(_Item,_Val);

IF
CharacterLeveledUp(_Char)
AND
CharacterGetLevel(_Char,_Level)
AND
DB_AS_MaxPlayerLevel(_Val)
AND
_Level > _Val
THEN
NOT DB_AS_MaxPlayerLevel(_Val);
DB_AS_MaxPlayerLevel(_Level);
*/

EXITSECTION

ENDEXITSECTION
