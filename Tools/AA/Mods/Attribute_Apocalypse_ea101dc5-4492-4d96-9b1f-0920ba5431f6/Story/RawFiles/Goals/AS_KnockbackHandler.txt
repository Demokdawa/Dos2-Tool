Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
// Toggle skills
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAbility(_Char,"Ranged",_Val)
AND
_Val > 0
AND
CharacterHasSkill(_Char,"Shout_AS_KnockbackOff",0)
AND
ObjectGetFlag(_Char,"AS_KnockbackDisabled",0)
THEN
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOn");
CharacterAddSkill(_Char,"Shout_AS_KnockbackOff",0);

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAbility(_Char,"Ranged",_Val)
AND
_Val > 0
AND
CharacterHasSkill(_Char,"Shout_AS_KnockbackOn",0)
AND
ObjectGetFlag(_Char,"AS_KnockbackDisabled",1)
THEN
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOff");
CharacterAddSkill(_Char,"Shout_AS_KnockbackOn",0);


IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAbility(_Char,"Ranged",_Val)
AND NOT
_Val > 0
THEN
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOn");
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOff");

IF
CharacterStatusApplied(_Char,"AS_KNOCKBACKON",_)
THEN
ObjectClearFlag(_Char,"AS_KnockbackDisabled");
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOn");
CharacterAddSkill(_Char,"Shout_AS_KnockbackOff",0);

IF
CharacterStatusApplied(_Char,"AS_KNOCKBACKOFF",_)
THEN
ObjectSetFlag(_Char,"AS_KnockbackDisabled");
CharacterRemoveSkill(_Char,"Shout_AS_KnockbackOff");
CharacterAddSkill(_Char,"Shout_AS_KnockbackOn",0);






IF
ObjectTurnStarted(_Char)
THEN
ProcObjectTimerCancel(_Char,"AS_TempRemoveTurn");
ObjectSetFlag(_Char,"AS_IsTurn");
ObjectSetFlag(_Char,"AS_IsReallyTurn");



IF
ObjectTurnEnded(_Char)
THEN
ObjectClearFlag(_Char,"AS_IsTurn");
ObjectClearFlag(_Char,"AS_IsReallyTurn");


// This is for attacks of opportunity. Where would the fun be if they couldn't knock people back? ;)
IF
CharacterStartAttackObject(_,_,_Attacker)
AND
ObjectGetFlag(_Attacker,"AS_IsTurn",0)
THEN
ObjectSetFlag(_Attacker,"AS_IsTurn");
ProcObjectTimerCancel(_Attacker,"AS_TempRemoveTurn");
ProcObjectTimer(_Attacker,"AS_TempRemoveTurn",1900);


PROC
ProcObjectTimerFinished(_Char,"AS_TempRemoveTurn")
AND
ObjectGetFlag(_Char,"AS_IsReallyTurn",0)
THEN
ObjectClearFlag(_Char,"AS_IsTurn");



IF
CharacterReceivedDamage(_Char,_Per,(CHARACTERGUID)_Source)
AND
CharacterIsEnemy(_Char,_Source,1)							// Only apply to enemies
AND
_Per > 0
AND
ObjectGetFlag(_Char,"AS_KnockBlacklist",0)
AND
ObjectGetFlag(_Source,"AS_IsTurn",1)
THEN
CharacterCharacterSetEvent(_Char,_Source,"AS_DidDamage");
SetStoryEvent(_Char,"AS_VictimKnockList");






IF
StoryEvent(_Char,"AS_VictimKnockList")
THEN
ObjectSetFlag(_Char,"AS_KnockBlacklist");
ProcObjectTimer(_Char,"AS_RemoveKnocklist",1900);



PROC
ProcObjectTimerFinished(_Char,"AS_RemoveKnocklist")
THEN
ObjectClearFlag(_Char,"AS_KnockBlacklist");


/*
IF
CharacterCharacterEvent(_Victim,_Attacker,"AS_DidDamage")
AND
DB_DummyHelping(_Attacker)
AND
DB_ASDummy(_Clone)
THEN
CharacterUseSkill(_Clone,"Target_AS_KnockBack",
*/
EXITSECTION

ENDEXITSECTION
