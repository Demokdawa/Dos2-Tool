Version 1
SubGoalCombiner SGC_AND
INITSECTION
GlobalSetFlag("AS_Divine_War_Active");

KBSECTION

// 26/07/2019 Update - Attribute Basevalue set to 10. This is for prior savefiles.

IF
RegionStarted(_Region)
AND
IsCharacterCreationLevel(_Region,0)
AND
_Region != "Test_Level"
THEN
TimerLaunch("AS_DivineWar_Boost10Timer",2000);

IF
TimerFinished("AS_DivineWar_Boost10Timer")
AND
GlobalGetFlag("AS_DivineWar_CheckedForAttributeUpgrade",0)
THEN
GlobalSetFlag("AS_DivineWar_CheckedForAttributeUpgrade");
IterateParties("AS_DivineWar_BoostAllBy10");

IF
RegionStarted(_Region)
AND
IsCharacterCreationLevel(_Region,1)
THEN
GlobalSetFlag("AS_DivineWar_CheckedForAttributeUpgrade");

/*
IF
StoryEvent((CHARACTERGUID)_Char,"AS_DivineWar_BoostAllBy10")
AND
ObjectGetFlag(_Char,"AS_BoostedBy10",0)
AND
CharacterHasTalent(_Char,"LoneWolf",0)
THEN
CharacterAddAttribute(_Char,"Strength",10);
CharacterAddAttribute(_Char,"Finesse",10);
CharacterAddAttribute(_Char,"Intelligence",10);
CharacterAddAttribute(_Char,"Memory",10);
CharacterAddAttribute(_Char,"Constitution",10);
CharacterAddAttribute(_Char,"Wits",10);
ObjectSetFlag(_Char,"AS_BoostedBy10");
*/

/*
IF
StoryEvent((CHARACTERGUID)_Char,"AS_DivineWar_BoostAllBy10")
AND
ObjectGetFlag(_Char,"AS_BoostedBy10",0)
AND
CharacterHasTalent(_Char,"LoneWolf",1)
THEN
CharacterAddAttribute(_Char,"Strength",5);
CharacterAddAttribute(_Char,"Finesse",5);
CharacterAddAttribute(_Char,"Intelligence",5);
CharacterAddAttribute(_Char,"Memory",5);
CharacterAddAttribute(_Char,"Constitution",5);
CharacterAddAttribute(_Char,"Wits",5);
ObjectSetFlag(_Char,"AS_BoostedBy10");
*/






IF
GameStarted(_,_)
THEN
TimerLaunch("AS_StatCheckStart",1000);

IF
CharacterResurrected(_)
THEN
TimerLaunch("AS_StatCheckStart",500);

IF
CharacterJoinedParty(_Char)
THEN
TimerLaunch("AS_StatCheckStart",500);

IF
TimerFinished("AS_StatCheckStart")
THEN
GlobalSetFlag("AS_Divine_War_Active");
IterateParties("AS_IfPlayer_ResetAttributes");

IF
ObjectEnteredCombat(_Char,_)
THEN
ProcObjectTimer(_Char,"AS_ResetAttrDelay1",100);

PROC
ProcObjectTimerFinished(_Char,"AS_ResetAttrDelay1")
THEN
SetStoryEvent(_Char,"AS_ResetAttributes");

IF
StoryEvent(_Char,"AS_ResetAttributes")
AND
NOT DB_AS_AlmightyCleaveString(_)
THEN
DB_AS_AlmightyCleaveString("<font color='#d42411' size='24px'>Almighty Cleave</font>");

// Debug fix for the three 'status attributes', which seem to have bugs sometimes
IF
ObjectTurnStarted(_Char)
THEN
SetStoryEvent(_Char,"AS_CheckForNullAttributes");
/*
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckForNullAttributes")
AND
CharacterGetAttribute(_Char,"Strength",_Stat)
AND		// Let's not go over 40. No status exists for that.
IntegerMin(_Stat,40,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_FORTUNE",_StatStr,_Str)
THEN
SetVarInteger(_Char,"AS_LastFortune",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	
*/

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckForNullAttributes")
AND
CharacterGetAttribute(_Char,"Finesse",_Stat)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Stat,60,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_FOCUS",_StatStr,_Str)
THEN
SetVarInteger(_Char,"AS_LastFocus",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckForNullAttributes")
AND
CharacterGetAttribute(_Char,"Strength",_Stat)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Stat,60,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_VIGOR",_StatStr,_Str)
THEN
SetVarInteger(_Char,"AS_LastVigor",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckForNullAttributes")
AND
CharacterGetAttribute(_Char,"Wits",_Stat)
AND		// Let's not go over 50. No status exists for that.
IntegerMin(_Stat,50,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_CRIT",_StatStr,_Str)
THEN
ApplyStatus(_Char,_Str,-1.0,1);	



IF
StoryEvent((CHARACTERGUID)_Char,"AS_IfPlayer_ResetAttributes")
AND
CharacterIsPlayer(_Char,1)
THEN
SetStoryEvent(_Char,"AS_ResetAttributes");


IF
StoryEvent((CHARACTERGUID)_Char,"AS_ResetAttributes")
THEN
SetVarInteger(_Char,"AS_LastFortune",0);
SetVarInteger(_Char,"AS_LastFocus",0);
SetVarInteger(_Char,"AS_LastVigor",0);
SetVarInteger(_Char,"AS_LastVitae",0);
SetVarInteger(_Char,"AS_LastSkill",0);
SetVarInteger(_Char,"AS_LastRegen",0);
SetVarInteger(_Char,"AS_LastAcro",0);
SetVarInteger(_Char,"AS_LastLifesteal",0);
SetVarInteger(_Char,"AS_LastLeader",0);
SetVarInteger(_Char,"AS_LastPolymorph",0);
// The below statuses are 0-value statuses on the same stack that will remove all increments of the status
ApplyStatus(_Char,"AS_FORTUNE0",0.0,0);
ApplyStatus(_Char,"AS_FOCUS0",0.0,0);			
ApplyStatus(_Char,"AS_VIGOR0",0.0,0);		
RemoveStatus(_Char,"AS_REGEN");
RemoveStatus(_Char,"AS_POLYBOOST");
ProcObjectTimer(_Char,"AS_CheckAttrTimer",50);
//CharacterStatusText(_Char,"Reset event called");


PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char,"AS_CheckAttrTimer")
THEN
SetStoryEvent(_Char,"AS_CheckAttributes");
//CharacterStatusText(_Char,"Running loop");

// Loop
PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char,"AS_CheckAttrTimer")
AND
CharacterIsPlayer(_Char,1)          // Loop only for players!
THEN
ProcObjectTimer(_Char,"AS_CheckAttrTimer",2000);

IF
CharacterStatusApplied(_Char,_,_)
THEN
SetStoryEvent(_Char,"AS_CheckAttributes");

IF
CharacterStatusRemoved(_Char,_,_)
THEN
SetStoryEvent(_Char,"AS_CheckAttributes");

/*
IF
ObjectEnteredCombat((CHARACTERGUID)_Char,_)
AND
CharacterIsPlayer(_Char,0)
THEN
SetStoryEvent(_Char,"AS_ResetAttributes");
*/

/*
// Global Range Down
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
HasActiveStatus(_Char,"AS_RANGEDOWN",0)
THEN
ApplyStatus(_Char,"AS_RANGEDOWN",-1.0,1);
*/

IF
CharacterStatusAttempt((CHARACTERGUID)_Char,_,_)
AND
NOT GetVarInteger(_Char,"AS_Willpower",_)
AND
CharacterIsInCombat(_Char,0)
THEN
SetVarInteger(_Char,"AS_Willpower",0);


// Black-Hearted talent
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"LivingArmor",1)
AND
HasActiveStatus(_Char,"AS_BLACKHEART",0)
THEN
RemoveStatus(_Char,"AS_DECAYIMMUNE");
ApplyStatus(_Char,"AS_BLACKHEART",-1.0,1,_Char);

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"LivingArmor",1)
AND
HasActiveStatus(_Char,"AS_BLACKHEARTSTATS",0)
THEN
ApplyStatus(_Char,"AS_BLACKHEARTSTATS",-1.0,1,_Char);
SetTag(_Char,"BLOCK_BLESS");

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"LivingArmor",0)
AND
HasActiveStatus(_Char,"AS_BLACKHEART",1)
THEN
RemoveStatus(_Char,"AS_BLACKHEART");
RemoveStatus(_Char,"AS_BLACKHEARTSTATS");
ClearTag(_Char,"BLOCK_BLESS");

IF
ObjectEnteredCombat((CHARACTERGUID)_Char,_)
AND
CharacterHasTalent(_Char,"LivingArmor",1)
AND
CharacterHasSkill(_Char,"Target_Bless",1)
THEN
CharacterRemoveSkill(_Char,"Target_Bless");
CharacterAddSkill(_Char,"Target_Curse",1);

IF
ObjectLeftCombat((CHARACTERGUID)_Char,_)
AND
CharacterHasTalent(_Char,"LivingArmor",1)
AND
CharacterHasSkill(_Char,"Target_Bless",0)
AND
IsTagged(_Char,"SWORN",0)
THEN
CharacterRemoveSkill(_Char,"Target_Curse");
CharacterAddSkill(_Char,"Target_Bless",1);


// Strength/Toughness (fka Fortune) (except now it's picture of health haha syke)
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"WarriorLoreNaturalHealth",1)
AND
CharacterGetAbility(_Char,"WarriorLore",_Stat)
AND		// Let's not go over 20.
IntegerMin(_Stat,20,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_FORTUNE",_StatStr,_Str)
AND
HasActiveStatus(_Char,_Str,0)
THEN
SetVarInteger(_Char,"AS_LastFortune",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	
//CharacterStatusText(_Char,"Attempting to set up fortune now");









// Finesse/Reach (fka Focus)
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAttribute(_Char,"Finesse",_Stat)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Stat,60,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_FOCUS",_StatStr,_Str)
AND
HasActiveStatus(_Char,_Str,0)
THEN
SetVarInteger(_Char,"AS_LastFocus",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	
//CharacterStatusText(_Char,"Attempting to set up fortune now");







// Intelligence-- now STRENGTH/Vigor
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAttribute(_Char,"Strength",_Stat)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Stat,60,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_VIGOR",_StatStr,_Str)
AND
HasActiveStatus(_Char,_Str,0)
THEN
SetVarInteger(_Char,"AS_LastVigor",_Stat);
ApplyStatus(_Char,_Str,-1.0,1);	
//CharacterStatusText(_Char,"Attempting to set up fortune now");

// Wisdom - Crit Boost
IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterGetAttribute(_Char,"Wits",_Stat)
AND		// Let's not go over 50. No status exists for that.
IntegerMin(_Stat,50,_Min)
AND
IntegertoString(_Min,_StatStr)
AND
StringConcatenate("AS_CRIT",_StatStr,_Str)
AND
HasActiveStatus(_Char,_Str,0)
THEN
ApplyStatus(_Char,_Str,-1.0,1);	
//CharacterStatusText(_Char,"Attempting to set up fortune now");

IF
StoryEvent((CHARACTERGUID)_Char,"AS_SetUpBaseStatuses")
AND
CharacterGetAttribute(_Char,"Strength",_Strength)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Strength,60,_SMin)
AND
IntegertoString(_SMin,_StatSStr)
AND
StringConcatenate("AS_VIGOR",_StatSStr,_SStr)
AND
CharacterGetAttribute(_Char,"Finesse",_Finesse)
AND		// Let's not go over 60. No status exists for that.
IntegerMin(_Finesse,60,_FMin)
AND
IntegertoString(_FMin,_StatFStr)
AND
StringConcatenate("AS_FOCUS",_StatFStr,_FStr)
THEN
SetVarInteger(_Char,"AS_LastVigor",_Strength);
ApplyStatus(_Char,_SStr,-1.0,1);	
SetVarInteger(_Char,"AS_LastFocus",_Finesse);
ApplyStatus(_Char,_FStr,-1.0,1);	

IF
StoryEvent((CHARACTERGUID)_Char,"AS_SetUpBaseStatuses")
AND
CharacterHasTalent(_Char,"WarriorLoreNaturalHealth",1)
AND
CharacterGetAbility(_Char,"WarriorLore",_Intel)
AND		// Let's not go over 20. No status exists for that.
IntegerMin(_Intel,20,_IMin)
AND
IntegertoString(_IMin,_StatIStr)
AND
StringConcatenate("AS_FORTUNE",_StatIStr,_IStr)
THEN
SetVarInteger(_Char,"AS_LastFortune",_Intel);
ApplyStatus(_Char,_IStr,-1.0,1);	

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"WarriorLoreNaturalHealth",1)
AND
CharacterGetAbility(_Char,"WarriorLore",_Intel)
AND
IntegertoString(_Intel,_StatIStr)
AND
StringConcatenate("AS_FORTUNE",_StatIStr,_IStr)
AND
HasActiveStatus(_Char,_IStr,0)
THEN
ApplyStatus(_Char,_IStr,-1.0,1);	

IF
StoryEvent((CHARACTERGUID)_Char,"AS_CheckAttributes")
AND
CharacterHasTalent(_Char,"WarriorLoreNaturalHealth",0)
AND
HasActiveStatus(_Char,"AS_FORTUNE0",0)
THEN
ApplyStatus(_Char,"AS_FORTUNE0",-1.0,1);	

// Attribute Insanity compatibility

IF
StoryEvent(_Char,"AS_CheckAttributes")
AND
GlobalGetFlag("AS_Divine_War_Active",0)
THEN
GlobalSetFlag("AS_Divine_War_Active");

IF
StoryEvent(_Char,"AS_CheckAttributes")
AND
HasActiveStatus(_Char,"AR_FINBOOST",1)
THEN
RemoveStatus(_Char,"AR_FINBOOST");

IF
StoryEvent(_Char,"AS_CheckAttributes")
AND
HasActiveStatus(_Char,"AR_CONBOOST",1)
THEN
RemoveStatus(_Char,"AR_CONBOOST");

IF
StoryEvent(_Char,"AS_CheckAttributes")
AND
HasActiveStatus(_Char,"AR_BOOSTDAMAGE",1)
THEN
RemoveStatus(_Char,"AR_BOOSTDAMAGE");

IF
StoryEvent(_Char,"AS_CheckAttributes")
AND
HasActiveStatus(_Char,"AR_PERCEPTIONBOOST",1)
THEN
RemoveStatus(_Char,"AR_PERCEPTIONBOOST");

EXITSECTION

ENDEXITSECTION
